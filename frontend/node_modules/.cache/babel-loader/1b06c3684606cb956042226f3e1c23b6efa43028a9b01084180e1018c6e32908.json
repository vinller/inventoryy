{"ast":null,"code":"var _jsxFileName = \"/Users/vinny/inventory-logger/frontend/src/pages/AdminDashboard.jsx\",\n  _s = $RefreshSig$();\n// src/pages/AdminDashboard.jsx\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport TopBar from \"../components/TopBar\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  var _user;\n  const navigate = useNavigate();\n  const adminDashboardCards = [{\n    title: \"User Management\",\n    description: \"Create, view, edit, or remove user accounts and assign roles.\",\n    path: \"/admin-dashboard/users\",\n    icon: \"ðŸ‘¥\"\n  }, {\n    title: \"Item Management\",\n    description: \"Add, edit, view or delete items. Organized by building and category.\",\n    path: \"/admin-dashboard/items\",\n    icon: \"ðŸ“¦\"\n  }, {\n    title: \"Log Items\",\n    description: \"Record the return of checked-out equipment and update inventory status.\",\n    path: \"/scan\",\n    icon: \"ðŸ“¦\"\n  }, {\n    title: \"System Logs\",\n    description: \"Review backend activity and access history logs.\",\n    path: \"/scan\",\n    // You can change this if System Logs has a separate route\n    icon: \"ðŸ“œ\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 min-h-screen bg-gray-900 text-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold mb-6 text-center text-asuGold\",\n        children: [\"Welcome, \", (_user = user) === null || _user === void 0 ? void 0 : _user.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n        children: adminDashboardCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => navigate(card.path),\n          className: \"cursor-pointer bg-gray-800 hover:bg-gray-700 transition rounded-2xl p-6 shadow-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-4xl mb-2\",\n            children: card.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold mb-1\",\n            children: card.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-400 text-sm\",\n            children: card.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 7\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 5\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(AdminDashboard, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useNavigate","TopBar","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminDashboard","_s","_user","navigate","adminDashboardCards","title","description","path","icon","children","fileName","_jsxFileName","lineNumber","columnNumber","className","user","username","map","card","index","onClick","_c","$RefreshReg$"],"sources":["/Users/vinny/inventory-logger/frontend/src/pages/AdminDashboard.jsx"],"sourcesContent":["// src/pages/AdminDashboard.jsx\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport TopBar from \"../components/TopBar\";\n\nfunction AdminDashboard() {\n  const navigate = useNavigate();\n\n  const adminDashboardCards = [\n    {\n      title: \"User Management\",\n      description: \"Create, view, edit, or remove user accounts and assign roles.\",\n      path: \"/admin-dashboard/users\",\n      icon: \"ðŸ‘¥\",\n    },\n    {\n      title: \"Item Management\",\n      description: \"Add, edit, view or delete items. Organized by building and category.\",\n      path: \"/admin-dashboard/items\",\n      icon: \"ðŸ“¦\",\n    },\n    {\n      title: \"Log Items\",\n      description: \"Record the return of checked-out equipment and update inventory status.\",\n      path: \"/scan\",\n      icon: \"ðŸ“¦\",\n    },\n    {\n      title: \"System Logs\",\n      description: \"Review backend activity and access history logs.\",\n      path: \"/scan\", // You can change this if System Logs has a separate route\n      icon: \"ðŸ“œ\",\n    },\n  ];\n  \n\n  return (\n    <>\n      <TopBar />\n\n      <div className=\"p-6 min-h-screen bg-gray-900 text-white\">\n        <h2 className=\"text-3xl font-bold mb-6 text-center text-asuGold\">\n          Welcome, {user?.username}!\n        </h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n  {adminDashboardCards.map((card, index) => (\n    <div\n      key={index}\n      onClick={() => navigate(card.path)}\n      className=\"cursor-pointer bg-gray-800 hover:bg-gray-700 transition rounded-2xl p-6 shadow-md\"\n    >\n      <div className=\"text-4xl mb-2\">{card.icon}</div>\n      <h3 className=\"text-xl font-semibold mb-1\">{card.title}</h3>\n      <p className=\"text-gray-400 text-sm\">{card.description}</p>\n    </div>\n  ))}\n</div>\n\n      </div>\n    </>\n  );\n}\n\nexport default AdminDashboard;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,KAAA;EACxB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,mBAAmB,GAAG,CAC1B;IACEC,KAAK,EAAE,iBAAiB;IACxBC,WAAW,EAAE,+DAA+D;IAC5EC,IAAI,EAAE,wBAAwB;IAC9BC,IAAI,EAAE;EACR,CAAC,EACD;IACEH,KAAK,EAAE,iBAAiB;IACxBC,WAAW,EAAE,sEAAsE;IACnFC,IAAI,EAAE,wBAAwB;IAC9BC,IAAI,EAAE;EACR,CAAC,EACD;IACEH,KAAK,EAAE,WAAW;IAClBC,WAAW,EAAE,yEAAyE;IACtFC,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE;EACR,CAAC,EACD;IACEH,KAAK,EAAE,aAAa;IACpBC,WAAW,EAAE,kDAAkD;IAC/DC,IAAI,EAAE,OAAO;IAAE;IACfC,IAAI,EAAE;EACR,CAAC,CACF;EAGD,oBACEX,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACEZ,OAAA,CAACF,MAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEVhB,OAAA;MAAKiB,SAAS,EAAC,yCAAyC;MAAAL,QAAA,gBACtDZ,OAAA;QAAIiB,SAAS,EAAC,kDAAkD;QAAAL,QAAA,GAAC,WACtD,GAAAP,KAAA,GAACa,IAAI,cAAAb,KAAA,uBAAJA,KAAA,CAAMc,QAAQ,EAAC,GAC3B;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLhB,OAAA;QAAKiB,SAAS,EAAC,sDAAsD;QAAAL,QAAA,EAC1EL,mBAAmB,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnCtB,OAAA;UAEEuB,OAAO,EAAEA,CAAA,KAAMjB,QAAQ,CAACe,IAAI,CAACX,IAAI,CAAE;UACnCO,SAAS,EAAC,mFAAmF;UAAAL,QAAA,gBAE7FZ,OAAA;YAAKiB,SAAS,EAAC,eAAe;YAAAL,QAAA,EAAES,IAAI,CAACV;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAChDhB,OAAA;YAAIiB,SAAS,EAAC,4BAA4B;YAAAL,QAAA,EAAES,IAAI,CAACb;UAAK;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5DhB,OAAA;YAAGiB,SAAS,EAAC,uBAAuB;YAAAL,QAAA,EAAES,IAAI,CAACZ;UAAW;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GANtDM,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOP,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEK,CAAC;EAAA,eACN,CAAC;AAEP;AAACZ,EAAA,CAxDQD,cAAc;EAAA,QACJN,WAAW;AAAA;AAAA2B,EAAA,GADrBrB,cAAc;AA0DvB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}